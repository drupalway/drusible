---
- name: Creates nginx conf backup dir
  file:
    path: /etc/nginx.old
    state: directory

- name: Backup standard nginx folder
  shell: "cp -r /etc/nginx/* /etc/nginx.old"
  register: nginx_backuped
  when: drupal_nginx_conf_installed.stat.exists == false

- name: Clear /etc/nginx
  shell: rm -rf /etc/nginx/*
  when: drupal_nginx_conf_installed.stat.exists == false

- name: Clone nginx advanced drupal config
  git:
    repo: https://github.com/vladdancer/drupal-with-nginx
    dest: /etc/nginx
    update: true
  register:
  when: drupal_nginx_conf_installed.stat.exists == false

- name: Ensure nginx_ensite is installed.
  git:
    repo: https://github.com/perusio/nginx_ensite
    dest: "/opt/nginx_ensite"
    update: true
  register: nginx_ensite

- name: Install nginx_ensite script.
  file:
    src: "/opt/nginx_ensite/bin/nginx_ensite"
    dest: /usr/sbin/nginx_ensite
    state: link
    mode: 0755
  when: nginx_ensite

- name: Install nginx_dissite script.
  file:
    src: "/opt/nginx_ensite/bin/nginx_dissite"
    dest: /usr/sbin/nginx_dissite
    state: link
    mode: 0755
  when: nginx_ensite

- name: Ensure nginx/microcache is created.
  file:
    path: /var/cache/nginx/microcache
    state: directory

- name: Ensure sites-available is created.
  file:
    path: /etc/nginx/sites-available
    state: directory
    owner: root
    group: "{{ ansible_env.SUDO_USER }}"
    mode: 0775

- name: Ensure sites-enabled is created.
  file:
    path: /etc/nginx/sites-enabled
    state: directory
    owner: root
    group: "{{ ansible_env.SUDO_USER }}"
    mode: 0775
